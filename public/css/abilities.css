/* Estilos para exibição de habilidades de campeões */

.builder-abilities-section {
    background: var(--color-card-bg);
    border: 1px solid var(--color-border);
    border-radius: 16px;
    padding: 1.5rem;
    margin-top: 2rem;
}

.builder-abilities-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
    flex-wrap: wrap;
    gap: 1rem;
}

.builder-abilities-heading h4 {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--color-text);
    margin: 0 0 0.25rem 0;
}

.builder-abilities-heading p {
    font-size: 0.9rem;
    color: var(--color-text-secondary);
    margin: 0;
}

.builder-abilities-toggle {
    margin: 0;
    text-align: right;
}

.btn-abilities-toggle {
    background: linear-gradient(135deg, #1e3a8a, #3b82f6);
    border: none;
    border-radius: 8px;
    color: white;
    padding: 10px 20px;
    font-size: 0.9rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
    display: inline-flex;
    align-items: center;
    gap: 8px;
}

.btn-abilities-toggle:hover {
    background: linear-gradient(135deg, #1e40af, #2563eb);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(59, 130, 246, 0.4);
}

.btn-abilities-toggle.active {
    background: linear-gradient(135deg, #059669, #10b981);
}

.btn-abilities-toggle.active:hover {
    background: linear-gradient(135deg, #047857, #059669);
}

.champion-abilities-container {
    margin-top: 1rem;
    border-top: 2px solid var(--color-accent);
    padding-top: 1rem;
}

.champion-abilities {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.ability-passive,
.ability-spell {
    background: var(--color-card-bg);
    border: 1px solid var(--color-border);
    border-radius: 12px;
    padding: 1rem;
    transition: all 0.3s ease;
}

.ability-passive:hover,
.ability-spell:hover {
    border-color: var(--color-accent);
    box-shadow: 0 4px 12px rgba(5, 150, 170, 0.2);
}

.ability-header {
    display: flex;
    gap: 1rem;
    align-items: flex-start;
}

.ability-icon {
    position: relative;
    flex-shrink: 0;
    width: 64px;
    height: 64px;
}

.ability-icon img {
    width: 100%;
    height: 100%;
    border-radius: 8px;
    object-fit: cover;
}

.ability-key {
    position: absolute;
    bottom: -4px;
    right: -4px;
    background: var(--color-accent);
    color: white;
    font-size: 0.75rem;
    font-weight: bold;
    padding: 2px 6px;
    border-radius: 4px;
    min-width: 20px;
    text-align: center;
}

.ability-info {
    flex: 1;
    min-width: 0;
}

.ability-title {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 0.5rem;
    flex-wrap: wrap;
    gap: 0.5rem;
}

.ability-name {
    font-size: 1.1rem;
    font-weight: 600;
    color: var(--color-text);
    margin: 0;
}

.ability-level-selector {
    display: flex;
    gap: 4px;
}

.level-btn {
    background: var(--color-bg-secondary);
    border: 1px solid var(--color-border);
    border-radius: 4px;
    color: var(--color-text-secondary);
    font-size: 0.8rem;
    font-weight: 500;
    padding: 4px 8px;
    cursor: pointer;
    transition: all 0.2s ease;
    min-width: 28px;
}

.level-btn:hover {
    background: var(--color-accent);
    color: white;
    border-color: var(--color-accent);
}

.level-btn.active {
    background: var(--color-accent);
    color: white;
    border-color: var(--color-accent);
}

.ability-stats {
    display: flex;
    gap: 1rem;
    margin-bottom: 0.5rem;
    flex-wrap: wrap;
}

.ability-stats span {
    display: flex;
    align-items: center;
    gap: 4px;
    font-size: 0.85rem;
    color: var(--color-text-secondary);
}

.ability-cooldown i {
    color: #3b82f6;
}

.ability-cost i {
    color: #06b6d4;
}

.ability-range i {
    color: #8b5cf6;
}

.ability-damage i {
    color: #ef4444;
}

.ability-description {
    font-size: 0.9rem;
    line-height: 1.5;
    color: var(--color-text-secondary);
    margin: 0.5rem 0 0 0;
}

.ability-scaling {
    margin-top: 0.5rem;
    font-size: 0.85rem;
}

.scaling-label {
    color: var(--color-text);
    font-weight: 500;
    margin-right: 0.5rem;
}

.scaling-item {
    display: inline-block;
    background: var(--color-bg-secondary);
    color: var(--color-accent);
    padding: 2px 6px;
    border-radius: 4px;
    margin-right: 0.5rem;
    font-weight: 500;
}

.champion-spells {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
}

.abilities-error {
    background: var(--color-error-bg);
    color: var(--color-error);
    padding: 1rem;
    border-radius: 8px;
    text-align: center;
    font-weight: 500;
}

/* Responsividade */
@media (max-width: 768px) {
    .builder-abilities-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
    }
    
    .builder-abilities-toggle {
        text-align: left;
        width: 100%;
    }
    
    .btn-abilities-toggle {
        width: 100%;
        justify-content: center;
    }
    
    .ability-header {
        flex-direction: column;
        gap: 0.75rem;
    }
    
    .ability-icon {
        align-self: center;
    }
    
    .ability-title {
        flex-direction: column;
        align-items: flex-start;
        gap: 0.75rem;
    }
    
    .ability-stats {
        justify-content: center;
    }
    
    .level-btn {
        min-width: 32px;
        padding: 6px 10px;
    }
}

/* Animações */
@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.ability-passive,
.ability-spell {
    animation: fadeInUp 0.3s ease-out;
}

.ability-spell:nth-child(1) { animation-delay: 0.1s; }
.ability-spell:nth-child(2) { animation-delay: 0.2s; }
.ability-spell:nth-child(3) { animation-delay: 0.3s; }
.ability-spell:nth-child(4) { animation-delay: 0.4s; }

/* Estados de loading */
.champion-abilities-loading {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 2rem;
    color: var(--color-text-secondary);
}

.champion-abilities-loading i {
    margin-right: 0.5rem;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}